// Import necessary dependencies
import { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import authReducer from "./state";
import {
  persistStore,
  persistReducer,
  FLUSH,
  REHYDRATE,
  PAUSE,
  PERSIST,
  PURGE,
  REGISTER,
} from "redux-persist";
import storage from "redux-persist/lib/storage";
import { configureStore } from "@reduxjs/toolkit";
import getDefaultMiddleware from "@reduxjs/toolkit";
import { Provider } from "react-redux";
import { PersistGate } from "redux-persist/integration/react";

// Define persist configuration
const persistConfig = {
  key: "root",
  storage,
  version: 1,
};
const persistedReducer = persistReducer(persistConfig, authReducer);

// Configure Redux store
const store = configureStore({
  reducer: persistedReducer,
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({
      serializableCheck: {
        ignoredActions: [
          "FLUSH",
          "REHYDRATE",
          "PAUSE",
          "PERSIST",
          "PURGE",
          "REGISTER",
        ],
      },
    }),
});

// Initialize Inter for font loading
const inter = Inter({ subsets: ["latin"] });

// Define metadata for the page
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Define RootLayout component to wrap pages
const RootLayout: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  return (
    <div className={inter.className}>
      {/* Provider to provide Redux store to all components */}
      <Provider store={store}>
        {/* PersistGate to persist and rehydrate Redux state */}
        <PersistGate loading={null} persistor={persistStore(store)}>
          {children}
        </PersistGate>
      </Provider>
    </div>
  );
};

export default RootLayout;
